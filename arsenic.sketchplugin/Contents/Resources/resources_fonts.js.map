{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./resources/fonts.js"],"names":["fontList","document","getElementById","addEventListener","e","target","tagName","listAllLi","querySelectorAll","forEach","call","el","classList","remove","add","getTypographyCheckbox","getElementsByName","typographyCheckBox","i","$","id","is","prop","fetchSelectedFonts","window","setInitialFonts","fontsName","cont","createFontOption","push","selectedFontType","text","arsenicFontLayers","length","targetInput","fontName","postMessage","oninput","value","trim","filteredFonts","filter","font","toLowerCase","includes","removeExistingFont","firstChild","removeChild","li","createElement","className","innerHTML","appendChild"],"mappings":"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","file":"resources_fonts.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./resources/fonts.js\");\n","var fontList = [];\n// Font Related Js\ndocument.getElementById(\"font-listing\").addEventListener(\"click\", (e) => {\n  let target = e.target;\n  if (target.tagName != \"LI\") return;\n  const listAllLi = document.querySelectorAll(\".fontfamily-list-item\");\n  [].forEach.call(listAllLi, function (el) {\n    el.classList.remove(\"selected\");\n  });\n  target.classList.add(\"selected\");\n});\n\n// Typography checkbox events\nconst getTypographyCheckbox = document.getElementsByName(\n  \"select-typography-checkbox\"\n);\n\ngetTypographyCheckbox.forEach(function (typographyCheckBox, i) {\n  typographyCheckBox.addEventListener(\"change\", (e) => {\n    if ($(\"#\" + e.target.id).is(\":checked\")) {\n      $(\"#\" + e.target.id).prop(\"checked\", true);\n    } else {\n      $(\"#\" + e.target.id).prop(\"checked\", false);\n    }\n  });\n});\n\ndocument\n  .getElementById(\"select-all-typography\")\n  .addEventListener(\"click\", (e) => {\n    if ($(\"#select-all-typography\").is(\":checked\")) {\n      $('[name=\"select-typography-checkbox\"]').prop(\"checked\", true);\n    } else {\n      $('[name=\"select-typography-checkbox\"]').prop(\"checked\", false);\n    }\n  });\n\ndocument\n  .getElementById(\"updateFonts\")\n  .addEventListener(\"click\", () => fetchSelectedFonts());\n\n// call the webview from the plugin\nwindow.setInitialFonts = (fontsName) => {\n  let cont = document.getElementById(\"font-listing\");\n  createFontOption(fontsName, cont);\n  fontList.push(fontsName);\n};\n\nconst fetchSelectedFonts = function () {\n  const selectedFontType = $(\"li.selected\").text();\n  const arsenicFontLayers = $('[name=\"select-typography-checkbox\"]');\n\n  if (selectedFontType && arsenicFontLayers) {\n    for (let i = 0; i < arsenicFontLayers.length; i++) {\n      const targetInput = arsenicFontLayers[i];\n      const fontName = targetInput.id;\n      if ($(\"#\" + fontName).is(\":checked\")) {\n        window.postMessage(\"doUpdateFonts\", fontName, selectedFontType);\n      }\n    }\n\n    window.postMessage(\"setMessage\", \"fonts\");\n  }\n};\n\ndocument.getElementById(\"search-system-font\").oninput =\n  (\"change\",\n  (e) => {\n    let value = e.target.value;\n    // Prevent white space\n    if (value.trim().length > 0) {\n      // Filter fonts from local array based on search value\n      const filteredFonts = fontList?.filter((font) =>\n        font.toLowerCase().includes(value.toLowerCase())\n      );\n      removeExistingFont();\n      for (let i = 0; i < filteredFonts.length; i++) {\n        createFontOption(\n          filteredFonts[i],\n          document.getElementById(\"font-listing\")\n        );\n      }\n    } else {\n      removeExistingFont();\n      window.postMessage(\"getFonts\");\n    }\n  });\n\nconst removeExistingFont = () => {\n  let cont = document.getElementById(\"font-listing\");\n  while (cont.firstChild) {\n    cont.removeChild(cont.firstChild);\n  }\n};\n\nconst createFontOption = (fontsName, cont) => {\n  let li = document.createElement(\"li\"); // create li element.\n  li.className = \"fontfamily-list-item\";\n  li.innerHTML = fontsName; // assigning text to li using array value.\n  cont.appendChild(li); // append li to ul.\n};\n"],"sourceRoot":""}